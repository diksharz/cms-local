# Generated by Django 4.2.24 on 2025-10-15 06:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cms', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='productpricehistory',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='price_changes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productoption',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='cms.product'),
        ),
        migrations.AddField(
            model_name='productlinkvariant',
            name='linked_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_variant', to='cms.productvariant'),
        ),
        migrations.AddField(
            model_name='productlinkvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_variants', to='cms.product'),
        ),
        migrations.AddField(
            model_name='productlanguage',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.language'),
        ),
        migrations.AddField(
            model_name='productlanguage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_languages', to='cms.product'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='cms.product'),
        ),
        migrations.AddField(
            model_name='productdetail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_details', to='cms.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='cms.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='cms.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='packs',
            name='facility',
            field=models.ForeignKey(help_text='The facility this pack belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='packs',
            name='product',
            field=models.ForeignKey(blank=True, help_text='Associated product (can be null)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='cms.product'),
        ),
        migrations.AddField(
            model_name='geomapping',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geo_mappings', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='facilitystaff',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_staff', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='facilitystaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_staff', to='user.staff'),
        ),
        migrations.AddField(
            model_name='facilitymanager',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_managers', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='facilitymanager',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_managers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityinventory',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_inventories', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='facilityinventory',
            name='product_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_inventories', to='cms.productvariant'),
        ),
        migrations.AddField(
            model_name='facilityinventory',
            name='tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.tax'),
        ),
        migrations.AddField(
            model_name='facilitycategorys',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility_main_categories', to='cms.category'),
        ),
        migrations.AddField(
            model_name='facilitycategorys',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_categorys', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='facilitycategorys',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility_sub_categories', to='cms.category'),
        ),
        migrations.AddField(
            model_name='facilitycategorys',
            name='sub_sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility_sub_sub_categories', to='cms.category'),
        ),
        migrations.AddField(
            model_name='facility',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='managers',
            field=models.ManyToManyField(blank=True, related_name='managed_facilities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customtab',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabs', to='cms.category'),
        ),
        migrations.AddField(
            model_name='customsection',
            name='tabs',
            field=models.ManyToManyField(blank=True, related_name='sections', to='cms.customtab'),
        ),
        migrations.AddField(
            model_name='customfield',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='cms.customsection'),
        ),
        migrations.AddField(
            model_name='comboproductitem',
            name='combo',
            field=models.ForeignKey(help_text='The combo product this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='combo_items', to='cms.comboproduct'),
        ),
        migrations.AddField(
            model_name='comboproductitem',
            name='product_variant',
            field=models.ForeignKey(help_text='The variant included in this combo', on_delete=django.db.models.deletion.CASCADE, related_name='combo_inclusions', to='cms.productvariant'),
        ),
        migrations.AddField(
            model_name='comboproduct',
            name='combo_variant',
            field=models.OneToOneField(help_text='The variant that represents this combo product', on_delete=django.db.models.deletion.CASCADE, related_name='combo_product', to='cms.productvariant'),
        ),
        migrations.AddField(
            model_name='collection',
            name='facilities',
            field=models.ManyToManyField(blank=True, related_name='collections', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='collection',
            name='products',
            field=models.ManyToManyField(related_name='collections', to='cms.product'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='facilities',
            field=models.ManyToManyField(blank=True, related_name='clusters', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='cms.category'),
        ),
        migrations.AddField(
            model_name='bestsellingproducts',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='best_selling_products', to='cms.facility'),
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='cms.attribute'),
        ),
        migrations.AlterUniqueTogether(
            name='sizemeasurement',
            unique_together={('size_chart', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='sizechart',
            unique_together={('category',)},
        ),
        migrations.AddIndex(
            model_name='productvariantprices',
            index=models.Index(fields=['facility'], name='product_var_facilit_adb9ba_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantprices',
            index=models.Index(fields=['packs'], name='product_var_packs_i_258d8d_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantprices',
            index=models.Index(fields=['variant'], name='product_var_variant_091723_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantprices',
            index=models.Index(fields=['facility', 'variant'], name='product_var_facilit_44eed1_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantimage',
            index=models.Index(fields=['product_variant', 'is_active'], name='product_var_product_b58e20_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantimage',
            index=models.Index(fields=['product_variant', 'is_primary'], name='product_var_product_b89d60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productvariantcustomfield',
            unique_together={('product_variant', 'custom_field')},
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['product', 'is_active'], name='variants_product_08fada_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['sku'], name='variants_sku_181d05_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['ean_number'], name='variants_ean_num_cf1674_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['is_published', 'is_active'], name='variants_is_publ_f9548d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='producttypeattribute',
            unique_together={('product_type', 'attribute')},
        ),
        migrations.AlterUniqueTogether(
            name='producttype',
            unique_together={('category',)},
        ),
        migrations.AddIndex(
            model_name='productsizechartvalue',
            index=models.Index(fields=['product_variant'], name='product_siz_product_d577f3_idx'),
        ),
        migrations.AddIndex(
            model_name='productsizechartvalue',
            index=models.Index(fields=['size_attribute_value'], name='product_siz_size_at_1a5afb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productsizechartvalue',
            unique_together={('product_variant', 'size_attribute_value', 'measurement')},
        ),
        migrations.AddIndex(
            model_name='productpricehistory',
            index=models.Index(fields=['product', 'facility'], name='product_pri_product_2e84d0_idx'),
        ),
        migrations.AddIndex(
            model_name='productpricehistory',
            index=models.Index(fields=['product_variant', 'facility'], name='product_pri_product_5afee1_idx'),
        ),
        migrations.AddIndex(
            model_name='productpricehistory',
            index=models.Index(fields=['creation_date'], name='product_pri_creatio_0ebe25_idx'),
        ),
        migrations.AddIndex(
            model_name='productoption',
            index=models.Index(fields=['product', 'is_active'], name='product_opt_product_a18ed2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productoption',
            unique_together={('product', 'name')},
        ),
        migrations.AddIndex(
            model_name='productlinkvariant',
            index=models.Index(fields=['product', 'is_active'], name='product_lin_product_303f2e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productlinkvariant',
            unique_together={('product', 'linked_variant')},
        ),
        migrations.AddIndex(
            model_name='productdetail',
            index=models.Index(fields=['product', 'name'], name='product_det_product_0ac683_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_sku_fe2039_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='products_categor_9e60b3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand', 'is_active'], name='products_brand_i_2684af_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_published', 'is_active'], name='products_is_publ_9ea7ec_idx'),
        ),
        migrations.AddIndex(
            model_name='packs',
            index=models.Index(fields=['facility', 'is_active'], name='packs_facilit_2c0735_idx'),
        ),
        migrations.AddIndex(
            model_name='packs',
            index=models.Index(fields=['sku_code'], name='packs_sku_cod_1d7d9f_idx'),
        ),
        migrations.AddIndex(
            model_name='packs',
            index=models.Index(fields=['product'], name='packs_product_ea8133_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facilitystaff',
            unique_together={('facility', 'staff')},
        ),
        migrations.AlterUniqueTogether(
            name='facilitymanager',
            unique_together={('facility', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='facilityinventory',
            unique_together={('facility', 'product_variant')},
        ),
        migrations.AlterUniqueTogether(
            name='facilitycategorys',
            unique_together={('facility', 'category', 'sub_category', 'sub_sub_category')},
        ),
        migrations.AlterUniqueTogether(
            name='facility',
            unique_together={('name',)},
        ),
        migrations.AddIndex(
            model_name='comboproductitem',
            index=models.Index(fields=['combo', 'is_active'], name='combo_produ_combo_i_a6a918_idx'),
        ),
        migrations.AddIndex(
            model_name='comboproductitem',
            index=models.Index(fields=['product_variant'], name='combo_produ_product_2a949f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='comboproductitem',
            unique_together={('combo', 'product_variant')},
        ),
        migrations.AddIndex(
            model_name='comboproduct',
            index=models.Index(fields=['combo_variant', 'is_active'], name='combo_produ_combo_v_72c2e9_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['is_active'], name='collections_is_acti_b65401_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cluster',
            unique_together={('name',)},
        ),
        migrations.AddIndex(
            model_name='bestsellingproducts',
            index=models.Index(fields=['facility'], name='best_sellin_facilit_babc23_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attributevalue',
            unique_together={('attribute', 'value')},
        ),
    ]
