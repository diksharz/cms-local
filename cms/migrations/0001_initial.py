# Generated by Django 4.2.24 on 2025-10-15 06:54

import cms.models.product
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('attribute_type', models.CharField(choices=[('select', 'Select (Single Choice)'), ('multiselect', 'Multi Select'), ('text', 'Text Input')], default='select', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Attributes',
                'db_table': 'attributes',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Attribute Values',
                'db_table': 'attribute_values',
                'ordering': ['rank', 'value'],
            },
        ),
        migrations.CreateModel(
            name='BestSellingProducts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('product', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'best_selling_products',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Brands',
                'db_table': 'brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('shelf_life_required', models.BooleanField(default=False, help_text='Whether products in this category require shelf life date')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'clusters',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collections',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ComboProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the combo', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the combo', null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'combo_products',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='ComboProductItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Quantity of this variant in the combo', validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'combo_product_items',
                'ordering': ['combo', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Textarea'), ('richtext', 'Rich Text'), ('number', 'Number'), ('decimal', 'Decimal'), ('image', 'Image'), ('file', 'File'), ('date', 'Date'), ('datetime', 'Date & Time'), ('time', 'Time'), ('boolean', 'Yes/No'), ('select', 'Dropdown'), ('multiselect', 'Multi Select'), ('radio', 'Radio Buttons'), ('checkbox', 'Checkboxes')], default='text', max_length=20)),
                ('placeholder', models.CharField(blank=True, max_length=200, null=True)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('options', models.JSONField(blank=True, default=list, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('width_class', models.CharField(default='col-12', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Custom Fields',
                'db_table': 'custom_fields',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomSection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_collapsed', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Custom Sections',
                'db_table': 'custom_sections',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomTab',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Custom Tabs',
                'db_table': 'custom_tabs',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('facility_type', models.CharField(choices=[('store', 'Store'), ('warehouse', 'Warehouse')], max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=100)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('customer_care', models.CharField(blank=True, max_length=20, null=True)),
                ('cin_no', models.TextField(blank=True, null=True)),
                ('gstn_no', models.TextField(blank=True, null=True)),
                ('fssai_no', models.TextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('servicable_area', models.TextField(blank=True, default=list, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='FacilityCategorys',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('discount_upto', models.FloatField(default=0.0)),
                ('status', models.BooleanField(default=True)),
                ('arrange', models.BooleanField(default=False)),
                ('is_b2b_enabled', models.BooleanField(default=False)),
                ('is_top_offer_categoty', models.BooleanField(default=False)),
                ('discount_percentsge_off', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'facility_categorys',
            },
        ),
        migrations.CreateModel(
            name='FacilityInventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('stock', models.IntegerField(default=0)),
                ('base_price', models.FloatField(default=0.0)),
                ('mrp', models.FloatField(default=0.0)),
                ('selling_price', models.FloatField(default=0.0)),
                ('cust_discount', models.FloatField(blank=True, null=True)),
                ('max_purchase_limit', models.IntegerField(blank=True, null=True)),
                ('outofstock_threshold', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'facility_inventories',
            },
        ),
        migrations.CreateModel(
            name='FacilityManager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=25, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'facility_managers',
            },
        ),
        migrations.CreateModel(
            name='FacilityStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'facility_staff',
            },
        ),
        migrations.CreateModel(
            name='GeoMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('center_coords', models.TextField(blank=True, null=True)),
                ('coordinates', models.TextField(default=list)),
                ('address', models.TextField(blank=True, null=True)),
                ('fencing_names', models.TextField(blank=True, default=dict, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'geo_mappings',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('rlt', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Languages',
                'db_table': 'languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Packs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('sku_code', models.CharField(blank=True, help_text='SKU code of the pack', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the pack', null=True)),
                ('quantity', models.IntegerField(default=0, help_text='Current quantity in stock')),
                ('status', models.CharField(blank=True, help_text='Status of the pack (e.g., active, inactive, pending)', max_length=50, null=True)),
                ('is_elastic', models.BooleanField(default=False, help_text='Whether the pack has elastic demand/supply')),
                ('open_order_quantity', models.IntegerField(default=0, help_text='Quantity in open orders')),
                ('cycle_stock_quantity', models.IntegerField(default=0, help_text='Cycle stock quantity for regular inventory rotation')),
                ('threshold', models.IntegerField(default=0, help_text='Minimum stock threshold for reordering')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Pack',
                'verbose_name_plural': 'Packs',
                'db_table': 'packs',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_details',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveIntegerField(default=1)),
                ('image', models.TextField()),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'db_table': 'product_images',
                'ordering': ['priority', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ProductLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
            ],
            options={
                'verbose_name_plural': 'Product Languages',
                'db_table': 'product_languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductLinkVariant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product_link_variants',
                'ordering': ['product', 'linked_variant'],
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text="Option name (e.g., 'Color', 'Size', 'Quantity', 'Material')", max_length=100)),
                ('position', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('values', models.JSONField(default=list, help_text='List of option values: ["Red", "Blue", "Green"] or ["S", "M", "L", "XL"]')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product_options',
                'ordering': ['product', 'position', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Product Types',
                'db_table': 'product_types',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('base_price', models.FloatField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('selling_price', models.FloatField(blank=True, null=True)),
                ('psp', models.FloatField(blank=True, null=True)),
                ('qty', models.IntegerField(default=0)),
                ('max_purchase_limit', models.PositiveIntegerField(default=0)),
                ('margin', models.FloatField(blank=True, null=True)),
                ('margin_min', models.FloatField(default=0.0)),
                ('margin_max', models.FloatField(default=0.0)),
                ('peer_margin', models.FloatField(default=0.0)),
                ('peer_margin_min', models.FloatField(default=0.0)),
                ('peer_margin_max', models.FloatField(default=0.0)),
                ('threshold_wac', models.FloatField(default=0.0)),
                ('wac', models.FloatField(default=0.0)),
                ('return_days', models.IntegerField(default=0)),
                ('is_focussed', models.BooleanField(default=False)),
                ('is_freebies', models.BooleanField(default=False)),
                ('peer_stock_status', models.IntegerField(default=1, help_text='0: In Stock, 1: High demand, 2: Currently Unavailable, 3: Sold Out')),
                ('barcode', models.BigIntegerField(default=0)),
                ('threshold', models.IntegerField(default=0)),
                ('sku_class', models.CharField(blank=True, max_length=255, null=True)),
                ('style_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sku_size', models.CharField(blank=True, max_length=255, null=True)),
                ('size_type', models.CharField(blank=True, max_length=255, null=True)),
                ('ean_number', models.BigIntegerField(blank=True, null=True)),
                ('ran_number', models.BigIntegerField(blank=True, null=True)),
                ('hsn_code', models.TextField(blank=True, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('igst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cess', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('weight', models.CharField(blank=True, max_length=255, null=True)),
                ('net_qty', models.CharField(blank=True, max_length=255, null=True)),
                ('packaging_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_dimensions', models.JSONField(blank=True, help_text='Product dimensions: {"length": 15.5, "width": 7.6, "height": 0.8, "unit": "cm"}', null=True, validators=[cms.models.product.validate_dimensions])),
                ('package_dimensions', models.JSONField(blank=True, help_text='Package dimensions: {"length": 18.0, "width": 12.0, "height": 6.5, "unit": "cm"}', null=True, validators=[cms.models.product.validate_dimensions])),
                ('shelf_life', models.PositiveIntegerField(blank=True, help_text='Shelf life in days', null=True)),
                ('uom', models.CharField(blank=True, max_length=25, null=True)),
                ('is_pack', models.BooleanField(default=False)),
                ('pack_qty', models.PositiveIntegerField(default=1)),
                ('is_combo', models.BooleanField(default=False, help_text='True if this variant is a combo product')),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Product variant attributes like {"Size":"M", "Color":"Red"}', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_b2b_enable', models.BooleanField(default=False)),
                ('is_pp_enable', models.BooleanField(default=False)),
                ('is_visible', models.PositiveIntegerField(default=0, help_text='0: Offline, 1: Online, 2: Both')),
                ('is_published', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('pack_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pack_variants', to='cms.productvariant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='cms.product')),
            ],
            options={
                'db_table': 'variants',
                'ordering': ['product', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SizeChart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_charts', to='cms.attribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_charts', to='cms.category')),
            ],
            options={
                'verbose_name_plural': 'Size Charts',
                'db_table': 'size_charts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('cgst_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('sgst_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('igst_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('cess_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tax',
                'verbose_name_plural': 'Taxes',
                'db_table': 'taxes',
            },
        ),
        migrations.CreateModel(
            name='SizeMeasurement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('unit', models.CharField(default='inches', max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('size_chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='cms.sizechart')),
            ],
            options={
                'verbose_name_plural': 'Size Measurements',
                'db_table': 'size_measurements',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariantPrices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('price', models.FloatField(default=0.0, help_text='Base price')),
                ('mrp', models.FloatField(default=0.0, help_text='Maximum Retail Price')),
                ('igst', models.DecimalField(decimal_places=2, default=0.0, help_text='Integrated Goods and Services Tax', max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0.0, help_text='State Goods and Services Tax', max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0.0, help_text='Central Goods and Services Tax', max_digits=10)),
                ('cess', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional Cess', max_digits=10)),
                ('margin', models.DecimalField(decimal_places=2, default=0.0, help_text='Profit margin', max_digits=10)),
                ('margin_type', models.CharField(blank=True, help_text='Type of margin (percentage, fixed, etc.)', max_length=50, null=True)),
                ('selling_price', models.FloatField(default=0.0, help_text='Customer Selling Price')),
                ('psp', models.FloatField(default=0.0, help_text='Platform Selling Price')),
                ('psp_margin', models.DecimalField(decimal_places=2, default=0.0, help_text='PSP margin', max_digits=10)),
                ('facility', models.ForeignKey(help_text='The facility this pricing belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='variant_prices', to='cms.facility')),
                ('packs', models.ForeignKey(blank=True, help_text='Associated pack (can be null)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variant_prices', to='cms.packs')),
                ('variant', models.ForeignKey(default=0, help_text='Associated variant', on_delete=django.db.models.deletion.CASCADE, related_name='variant_prices', to='cms.productvariant')),
            ],
            options={
                'verbose_name': 'Product Variant Price',
                'verbose_name_plural': 'Product Variant Prices',
                'db_table': 'product_variant_prices',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariantImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('image', models.TextField()),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.PositiveIntegerField(default=0)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cms.productvariant')),
            ],
            options={
                'db_table': 'product_variant_images',
                'ordering': ['priority', 'creation_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariantCustomField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_values', to='cms.customfield')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_field_values', to='cms.productvariant')),
            ],
            options={
                'verbose_name_plural': 'Product Variant Custom Fields',
                'db_table': 'product_variant_custom_fields',
                'ordering': ['product_variant', 'custom_field'],
            },
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_type_attributes', to='cms.attribute')),
                ('attribute_values', models.ManyToManyField(blank=True, help_text='Specific attribute values allowed for this product type. If empty, all values are allowed.', related_name='product_type_attributes', to='cms.attributevalue')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_type_attributes', to='cms.producttype')),
            ],
            options={
                'verbose_name_plural': 'Product Type Attributes',
                'db_table': 'product_type_attributes',
            },
        ),
        migrations.AddField(
            model_name='producttype',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='product_types', through='cms.ProductTypeAttribute', to='cms.attribute'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='cms.category'),
        ),
        migrations.CreateModel(
            name='ProductSizeChartValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=50)),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_values', to='cms.sizemeasurement')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_chart_values', to='cms.productvariant')),
                ('size_attribute_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_chart_values', to='cms.attributevalue')),
            ],
            options={
                'verbose_name_plural': 'Product Size Chart Values',
                'db_table': 'product_size_chart_values',
                'ordering': ['size_attribute_value__rank', 'measurement__rank'],
            },
        ),
        migrations.CreateModel(
            name='ProductPriceHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updation_date', models.DateTimeField(auto_now=True)),
                ('old_price', models.FloatField()),
                ('new_price', models.FloatField()),
                ('old_csp', models.FloatField()),
                ('new_csp', models.FloatField()),
                ('percentage_change', models.FloatField()),
                ('change_reason', models.TextField(blank=True, null=True)),
                ('change_type', models.CharField(default='percentage_update', max_length=50)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='cms.cluster')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='cms.facility')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='cms.product')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='cms.productvariant')),
            ],
            options={
                'verbose_name': 'Product Price History',
                'verbose_name_plural': 'Product Price Histories',
                'db_table': 'product_price_history',
                'ordering': ['-creation_date'],
            },
        ),
    ]
